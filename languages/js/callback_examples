
// basic callback examples
 
    const greet = (msg,callback) => {
        console.log(`hello, ${msg}`);
        callback();
    }
    const hello = (msg) => {
        console.log("how are you?");
    }

    greet("surya",hello);

//another example of callback

    const greet1 = (msg,callback) => {
        const err = (error) => {
            callback("this is error",null);
        }
        const res = () => {
            callback(null,`hello, ${msg}`);
        }
        let isError = false;
        if (isError){
            err();
        }else{
            res();
        }
    }

    greet1("surya",(err, res) => {
        if (err){
            console.log(err);
        }else{
            console.log(`${res}.\nhow are you?`);
        }
    });

//callback example with setTimeout

    const fun1 = (callback) => {
        console.log("data is fetching..");
        setTimeout(() => {
            callback("data fetched");
        },1000);
    }
    const fun2 = (res) => {
        console.log("results : ",res);
    }
    fun1(fun2);

//promise example

        const myPromise = new Promise((res,rej) =>{
            let x = true;
            if (x) {
                res(x);
            }
            else{
                rej("Some error occured");
            }
        });
            
            myPromise
            .then((res) => console.log(`it is ${res}`))
            .catch((rej)=> console.log(rej));

// promise example with api simulation

function getUserData(userId){
    return new Promise((resolve,reject) => {
        console.log("fetching data...");
        setTimeout(() =>{
            if (userId){
                resolve({id:userId,name: "surya", age: 25});
            }else{
                reject("User id not exist");
            }
        },2000)
    })
}
let userid = 100;
getUserData(userid)
 .then((res) => console.log(res))
 .catch((err) => console.log('Error occured : ',err));

 /*

 //node.js

 const express = require('express');
 const app = express();

 app.get('api/users/:id',(res,req) => {
    
    const {id} = req.params;

    if(id){
    res.status(200).json({id: id, name: "surya", age: 25});
    }else{
    res.status(404).json({error: "User not found"});
    }

});

 app.listen(3000, () => console.log('Server is running on port 3000'));


 //frontend react.js

import React, {useState, useEffect} from 'react';

const userComponents = () => {

    const [userid, setuserId] = useState('');
    const [userData, setUserData] = useState({});
    const [error, setError] = useState('');

    const fetchUserData = async () => {
        try{
      const response = fetch('http://localhost:3000/api/users/${userid}');
      if(!response.ok){
      throw new Error("Error fetching user data");
      }
      const data = await response.json();
      setUserData(data);
      setError('');    

}catch(e){

setError(e.message);
}
}
return (
  <div>
  <input type="text" value={userid} onChange={(e) => setUserId(e.target.value)}/>
  <button onClick={fetchUserData}>Fetch User</button>
  {userData && (
     <div>
     <h2>User Data</h2>
     <p>ID: {userData.id}</p>
     <p>Name: {userData.name}</p>
     <p>Age: {userData.age}</p>
     </div>
  )}
     {error && <p style={{color: 'red'}}>{error}</p>}
  </div>
)
}
const

 */


