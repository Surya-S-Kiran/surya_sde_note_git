Project overview:
Kavach is complete safety management and incident reporting software which provide 
feature such as safety releted form reporting for employees, closing the safety report
for safety managers and ISO based Auditing to the auditors, traning exam assignment.
The main goal of this software is to digitalize the safety management process for 
manufacturing industry and visilize the data in the various charts.Also avoid manual process
of updating large excel sheet, making charts using them , auditiong , its provide all 
the process in a single software.

Problem statement:
to design robust role based access control for admin,  employee and safety managers.
//to design eficient database schema so that query will be efficient.
Firebase schema to reduce database read count.
to provide innovative solution which will lead to productivity and align with bussiness rules.

proposed solution:
role based access control: 
frontend: hasPermission function, Protected Route named HOF
backend: checkRole custom middleware
reduce read count:
Data structuring(hierarchial design + denormalization)
Query Optimization(compound indexes)
redux thunk, in memory chaching from backend

my role:
my role to design role based access control, redsign the firebase schema so that 
its easy to retrive data, implement subcription based payment gateway,
implemeting various charts for data visulization such as bar , stacked bar, line , radar charts.
Continueasly meeting with client to work on updates and feedback. PDF export and excel sheet export

technologies and tools:
for rabc : react , node 
for firebase schema design : redux thunk
PDF export : jsPdf, html2canvas library
chart implementation: chart.js, D3.js
Export as excel : xlxs libary
subscription based payment gateway : cloud function, node js, razorpay checkout API, react js

For rest api : axious, express

Impact and achievements:
for export option that i have suggested to team increses to client conversion 30%,
for radar chart option I got appretation from client because it made visulaization very easy,
successfully able to reduce the read count by 40% after redsigning the schema and adding
caching functionaliy.

Team Collabration:
In this project i was leading the team group of 3 people, my task was more on productivity how we 
can achive more productivity on this app, also added some crucial feature such as export pdf and excel sheet
option and implemented complex charts, integration of claud function.

learning and developement:
In this project i have learned project management skills, also got familiar with redux thunk, D3.js,
payment gateway, claud function.


-----------------------------------------------Star method---------------------------------------------
S - Situation (Context & Challenge)
Kavach is a complete safety management and incident reporting software designed for the manufacturing industry. It digitalizes safety-related processes, including incident reporting, ISO-based auditing, and training exam assignments. The goal was to replace the manual process of updating large Excel sheets, generating charts, and auditing by integrating everything into a single, efficient software.

T - Task (Your Responsibilities & Challenges)
As a key developer, my responsibilities included:

Designing Role-Based Access Control (RBAC) for admin, employees, and safety managers.
Optimizing Firebase schema to reduce database read counts and improve performance.
Implementing a subscription-based payment system for different user plans.
Developing advanced data visualization features using charts like bar, stacked bar, line, and radar.
Exporting reports as PDFs and Excel sheets for improved data usability.
Collaborating with the client to refine features based on continuous feedback.
A - Action (Steps Taken to Solve the Problem)
To address these challenges, I:

Implemented Role-Based Access Control (RBAC)

Frontend: Created a hasPermission function and Protected Routes using a Higher-Order Function (HOF).
Backend: Developed a checkRole middleware for verifying user roles in API requests.
Optimized Database Performance

Re-designed Firebase schema using a hierarchical structure + denormalization to minimize redundant reads.
Introduced compound indexes to speed up queries.
Used Redux Thunk & in-memory caching to store frequently accessed data, reducing unnecessary API calls.
Integrated Subscription-Based Payment System

Used Razorpay Checkout API and Cloud Functions (Node.js) to handle transactions securely.
Enhanced Data Visualization & Reporting

Implemented Chart.js and D3.js for interactive and intuitive safety data visualization.
Developed PDF export using jsPDF and html2canvas.
Enabled Excel export with XLSX library.
Continuous Client Collaboration

Regularly met with clients to gather feedback and iterate on the software’s features.
R - Result (Impact & Achievements)
✅ 30% increase in client conversion due to the export feature I suggested.
✅ 40% reduction in database read count after optimizing Firebase schema and adding caching mechanisms.
✅ Received client appreciation for the radar chart feature, which made safety data visualization simpler.
✅ Successfully led a team of 3 developers, focusing on productivity and feature enhancement.
✅ Implemented key features like PDF/Excel export, complex charts, and cloud function integrations.

Bonus: Learning & Development
Gained project management skills while leading a team.
Developed expertise in Redux Thunk, D3.js, and payment gateway integration.
Improved collaboration and communication through continuous client interactions.

---------------------------------5 mint intro----------------------------------
"Kavach is a safety management and incident reporting software built for manufacturing industries.
 It helps employees report safety issues, managers close reports, and auditors conduct ISO-based audits, 
 all in one place. Instead of using manual Excel sheets and separate tools, we streamlined everything into 
 a single platform with charts, reports, and automation.

My Role & Challenges
I worked on some key features:

Role-Based Access Control (RBAC): Ensured only the right people could access certain features.
Database Optimization: Re-designed Firebase structure to reduce unnecessary reads by 40%.
Subscription-Based Payments: Integrated Razorpay for seamless plan purchases.
Advanced Data Visualization: Built interactive charts (bar, stacked, line, radar) for better insights.
Report Exports: Enabled PDF & Excel export, which actually boosted client conversion by 30%.
Impact & Learnings
My export feature idea led to more client conversions.
The radar chart got special appreciation from clients because it made data easy to analyze.
Led a team of 3 developers, focusing on productivity and feature improvements.
Learned Redux Thunk, D3.js, payment integration, and cloud functions along the way.
Why It Matters
Before Kavach, companies were juggling Excel sheets, manual audits, and scattered safety reports. 
Now, they have a one-stop solution that saves time, improves efficiency, and gives real-time safety 
insights with just a few clicks!"

